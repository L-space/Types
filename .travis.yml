#dist: bionic
language: scala
scala_211: &scala_211 2.11.12
scala_212: &scala_212 2.12.10
scala_213: &scala_213 2.13.1
java_8: &java_8 openjdk8
java_11: &java_11 openjdk11
tests: &tests
  env: TEST="test"
  node_js: 11
  install:
    - npm install jsdom node-fetch abortcontroller-polyfill fetch-headers
  script: sbt -J-Xmx4096m ++$TRAVIS_SCALA_VERSION test
  cache:
    directories:
      - $HOME/.cache/coursier
      - $HOME/.ivy2/cache
      - $HOME/.sbt
      - node_modules
stages:
  - name: test
  - name: release
    if: (branch = master AND type = push) OR (tag IS present)
before_cache:
  - find $HOME/.sbt -name "*.lock" -delete
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -delete
jobs:
  include:
    - <<: *tests
      scala: *scala_211
      jdk: *java_8
    - <<: *tests
      scala: *scala_212
      jdk: *java_8
    - <<: *tests
      scala: *scala_213
      jdk: *java_8
    - <<: *tests
      scala: *scala_211
      jdk: *java_11
    - <<: *tests
      scala: *scala_212
      jdk: *java_11
    - <<: *tests
      scala: *scala_213
      jdk: *java_11
    - stage: release
      name: "Cross-publish to Sonatype"
      before_install:
        - git fetch --tags
#        - openssl aes-256-cbc -K $encrypted_de5ffdf9df6c_key -iv $encrypted_de5ffdf9df6c_iv -in .travis/secret-key.asc.enc -out .travis/secret-key.asc -d
#        - echo $PGP_PASSPHRASE | gpg --passphrase-fd 0 --batch --yes --import .travis/secret-key.asc
      script: sbt ci-release
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/boot
          - $HOME/.coursier
